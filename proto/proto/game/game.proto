syntax = "proto3";
package game;
option go_package = "rplss/protos/gen/go/proto/game";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "protoc-gen-openapiv2/options/annotations.proto";


option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "RPLSS"
    version: "1.0"
  }
  schemes: HTTP
  consumes: "application/json"
  produces: "application/json"
  security_definitions: {
    security: {
      key: "nauth"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "auth"
      }
    }
  }
  security: {
    security_requirement: {
      key: "nauth"
    }
  }
};



service Game {
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/login"
      body: "*"
    };
  }
  rpc Choices(google.protobuf.Empty) returns (ChoicesResponse) {
    option (google.api.http) = {
      get: "/choices"
    };
  }
  rpc Choice(google.protobuf.Empty) returns (ChoiceResponse) {
    option (google.api.http) = {
      get: "/choice"
    };
  }
  rpc Play(PlayRequest) returns (PlayResponse) {
    option (google.api.http) = {
      post: "/play"
      body: "*"
    };
  }
  rpc History(google.protobuf.Empty) returns (HistoryResponse) {
    option (google.api.http) = {
      get: "/history"
    };
  }
  rpc Reset(google.protobuf.Empty) returns (SuccessResponse) {
    option (google.api.http) = {
      get: "/reset"
    };
  }
}

message LoginRequest {
  string username = 1;
}

message LoginResponse {
  string jwt = 2;
}

message ChoicesResponse {
  repeated ChoiceResponse choices = 1;
}

message ChoiceResponse {
  int32 id = 1;
  string name = 2;
}

message PlayRequest {
  int32 player = 1;
}

message PlayResponse{
  string results = 1;
  int32 player = 2;
  int32 computer = 3;
}

message HistoryResponse {
  repeated PlayResponse results = 1;
}

message SuccessResponse {
  bool success = 1;
}